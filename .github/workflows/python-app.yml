# This workflow will install Python dependencies, run tests and lint with multiple versions of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python Package

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-test-package:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v5
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}
    - name: Check requirements.txt exists
      run: |
        echo -e "\033[36m[INFO]\033[0m Checking for requirements.txt..."
        if [[ ! -f requirements.txt ]]; then
          echo -e "\033[31m[FAIL]\033[0m requirements.txt not found. Required for CI and deployment."
          exit 1
        fi
        echo -e "\033[32m[PASS]\033[0m requirements.txt exists"
    - name: Install dependencies
      run: |
        echo -e "\033[36m[INFO]\033[0m Installing dependencies..."
        python -m pip install --upgrade pip
        pip install ruff pytest
        if [[ "${{ matrix.python-version }}" == "3.8" ]]; then
          pip install -r requirements-py38.txt
        else
          pip install -r requirements.txt
        fi
        echo -e "\033[32m[PASS]\033[0m Dependencies installed successfully"
    - name: Lint and format with ruff
      run: |
        echo -e "\033[36m[INFO]\033[0m Running Ruff lint and format check..."
        ruff check .
        ruff format --check .
        echo -e "\033[32m[PASS]\033[0m Ruff checks passed"
    - name: Prepare deployment files for testing
      run: |
        echo -e "\033[36m[INFO]\033[0m Preparing deployment files for testing..."
        python scripts/prepare-deployment.py vercel
        echo -e "\033[32m[PASS]\033[0m Deployment files prepared"
    - name: Test with pytest
      run: |
        echo -e "\033[36m[INFO]\033[0m Running tests with pytest..."
        PYTHONPATH=. pytest
        echo -e "\033[32m[PASS]\033[0m Tests completed successfully"
