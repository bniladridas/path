name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  DOCKER_IMAGE: path-app
  DOCKER_TAG: latest

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov codecov

    - name: Run tests with coverage
      run: |
        PYTHONPATH=. pytest --cov=./ --cov-report=xml --cov-report=term

    - name: Upload coverage to Codecov
      if: success() && github.event_name != 'pull_request'  # Only run on push to main
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN || 'dummy-token' }}
        file: ./coverage.xml
        fail_ci_if_error: false
        verbose: true

  lint:
    name: Lint and Format
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff black isort

    - name: Run Ruff linter
      run: ruff check .

    - name: Run Black formatter
      run: black --check .

    - name: Run isort
      run: isort --check-only .

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: [test, lint]

    steps:
    - uses: actions/checkout@v4

    - name: Run Bandit security linter
      uses: py-actions/bandit@v2
      with:
        args: -r .

    - name: Run Safety check
      uses: py-actions/safety@v1
      with:
        args: check -r requirements.txt

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [test, lint, security]
    if: github.ref == 'refs/heads/main'  # Only run on main branch

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
